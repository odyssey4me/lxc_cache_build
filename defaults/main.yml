---
# Copyright 2016, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# The variant name to give to resulting cache
#lxc_cache_variant_name: os_cinder-14.0.1

# The distribution packages to install into the cache
lxc_cache_distro_packages: []

# The python packages to install into the cache
lxc_cache_python_packages: []

# The python venvs to download into the cache
# Example:
# lxc_cache_python_venvs:
#   - src: "http://myrepo.example.com/venvs/14.0.1/ubuntu/cinder-14.0.1-x86_64.tgz"
#     checksum: "sha1:{{ lookup('url', 'http://myrepo.example.com/venvs/14.0.1/ubuntu/cinder-14.0.1-x86_64.checksum') }}"
#     cache: "/var/cache"
#     dest: "/openstack/venvs/cinder-14.0.1"
lxc_cache_python_venvs: []

# Bash commands to execute when preparing the lxc cache
#lxc_cache_extra_commands: |
#  echo 'This is a test command.' > /opt/test.txt
lxc_cache_extra_commands: ''

# A list of files may be copied into the container image cache during its preparation.
# Example:
#   lxc_container_cache_files:
#     - src: "/etc/openstack_deploy/files/etc/issue"
#       dest: "/etc/issue"
lxc_container_cache_files: []

# Timeout (in seconds) for the LXC cache to control how often the rootfs
# cache will be updated. By default this timeout is set to 14 days (the
# typical life span of a hotfix release).
lxc_cache_timeout: 1209600

# Toggle whether the cache should be rebuilt regardless of the expiry/timeout
lxc_cache_rebuild: no

# This role may be executed directly against a host, or by targeting
# the containers in the inventory and using host delegation to make
# caches build in parallel. If this is done, care must be taken to
# ensure that multiple forks are not trying to create the same variant
# on the same host multiple times.
# lxc_cache_physical_host: localhost

# The domain name server to use when building the cache
lxc_net_address: 10.0.3.1

# lxc container directories
lxc_container_cache_path: "/var/cache/lxc/download"
lxc_container_directory: "/var/lib/lxc"
lxc_container_log_path: "/var/log/lxc"

# The compression ratio used when creating the container cache rootfs archive
lxc_image_compression_ratio: 0

# The DNS name of the LXD server to source the base container cache from
lxc_image_cache_server: images.linuxcontainers.org

# The keyservers to use when validating GPG keys for the downloaded cache
lxc_image_cache_primary_keyserver: hkp://p80.pool.sks-keyservers.net:80
lxc_image_cache_secondary_keyserver: hkp://keyserver.ubuntu.com:80

# The packages to install when installing pip into the cache
lxc_cache_pip_packages:
  - pip
  - setuptools
  - wheel

# The pip options to use when installing python packages into the cache
lxc_cache_pip_options: >-
  {{ (pip_install_upper_constraints is defined) | ternary('--constraint ' + pip_install_upper_constraints | default(''),'') }}
  {{ pip_install_options | default('') }}

# The container backing store can be set to 'overlayfs' to use overlayfs
# This should only be done for production use with a linux kernel > 3.14
# which is when overlayfs was merged into the mainline kernel.
# Options are [ 'dir', 'lvm', 'overlayfs' ]
lxc_container_backing_store: dir

# The container backing method can be set to 'copy-on-write' to use LVM
# snapshot-backed containers when the container backing store is set to
# 'lvm'.
# Options are [ 'none', 'copy-on-write' ]
lxc_container_backing_method: none
